pool:
  vmImage: windows-latest

variables:
  - template: variables/main.yml
  - template: variables/checkout-and-cache.yml

trigger:
  paths:
    include:
      - spinach-nft-common/*
      - spinach-nft-server/*

stages:
- stage: Lint

  jobs:
    - job: Lint

      steps:
      - template: templates/checkout-and-cache.yml

      - script: yarn run lint
        displayName: 'Lint TypeScript'
        workingDirectory: ./$(APP_FOLDER_NAME)

      - script: yarn run g:devops
        displayName: 'Report Failure'
        condition: failed()
        env:
          AZ_DEVOPS_DISCORD_WEBHOOK: $(AZ_DEVOPS_DISCORD_WEBHOOK)
          AZ_DEVOPS_TITLE: $(Build.DefinitionName) - $(Build.BuildNumber)
          AZ_DEVOPS_STATUS: $(Agent.JobStatus)
          AZ_DEVOPS_BUILD_URL: $(System.CollectionUri)/$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)

- stage: BuildDeploy
  displayName: Build & Deploy

  dependsOn:
    - Lint

  jobs:
    - job: Build

      steps:
        - template: templates/checkout-and-cache.yml

        - template: templates/build-common.yml
          parameters:
            appFolderName: $(APP_FOLDER_NAME)
            commonModuleFolderName: $(APP_COMMON_MODULE_FOLDER_NAME_1)

        - template: templates/copy-dependencies.yml

        - script: yarn run build
          displayName: 'Build App'
          workingDirectory: ./$(APP_FOLDER_NAME)
          env:
            NODE_ENV: production
            MONGODB_URI: $(MONGODB_URI)

        - task: ArchiveFiles@2
          displayName: 'Archive Build'

          inputs:
            rootFolderOrFile: ./$(APP_FOLDER_NAME)
            includeRootFolder: false
            archiveType: 'tar'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(APP_FOLDER_NAME).tar.gz'
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'

          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(APP_FOLDER_NAME).tar.gz'
            ArtifactName: '$(APP_FOLDER_NAME)-artifact'
            publishLocation: 'Container'

        - script: yarn run g:devops
          displayName: 'Report DevOps Result'
          condition: always()
          env:
            AZ_DEVOPS_DISCORD_WEBHOOK: $(AZ_DEVOPS_DISCORD_WEBHOOK)
            AZ_DEVOPS_TITLE: $(Build.DefinitionName) - $(Build.BuildNumber)
            AZ_DEVOPS_STATUS: $(Agent.JobStatus)
            AZ_DEVOPS_BUILD_URL: $(System.CollectionUri)/$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)
